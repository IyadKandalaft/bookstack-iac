AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template to deploy an Application Load Balancer with TLS encryption

Parameters:
  ResourcePrefix:
    Type: String
    Default: BookStack
    Description: Prefix for naming resources

  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID

  LoadBalancerSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Subnets for the Load Balancer

  LoadBalancerSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Subnets for the Load Balancer

  ACMCertificateArn:
    Type: String
    Description: ARN of the ACM Certificate for the Load Balancer

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: SSM Parameter for the Load Balancer Security Group ID

  LoadBalancerScheme:
    Type: String
    AllowedValues:
      - internal
      - internet-facing
    Default: internet-facing
    Description: Scheme for the Load Balancer

  AppDomain:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9.-]*$
    Default: bookstack.mydomain.com
    Description: Domain name for the application

  AppProtocol:
    Type: String
    Default: HTTPS
    AllowedValues:
      - HTTP
      - HTTPS
    Description: Protocol used by the application
  
  AppPort:
    Type: Number
    MinValue: 1
    MaxValue: 65535
    Default: 443
    Description: Port used by the application

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "${ResourcePrefix}"
      Subnets:
        - !Ref LoadBalancerSubnet1
        - !Ref LoadBalancerSubnet2
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Scheme: !Ref LoadBalancerScheme
      Type: application
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'

  HTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: "Forbidden"
            StatusCode: 403
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref ACMCertificateArn
      SslPolicy: ELBSecurityPolicy-TLS13-1-2-2021-06
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}-https-listener"

  DomainRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      Conditions:
        - Field: host-header
          Values:
            - !Ref AppDomain
      
      ListenerArn: !Ref HTTPSListener
      Priority: 1

  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}-http-listener"

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "${ResourcePrefix}-ecs-app"
      Port: !Ref AppPort
      Protocol: !Ref AppProtocol
      VpcId: !Ref VPCId
      TargetType: ip
      HealthCheckPath: /status
      HealthCheckProtocol: !Ref AppProtocol
      HealthCheckIntervalSeconds: 20
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5
      Matcher:
        HttpCode: '200-399'


Outputs:
  LoadBalancerName:
    Value: !GetAtt LoadBalancer.LoadBalancerName
    Description: Name of the Load Balancer resource

  LoadBalancerArn:
    Value: !Ref LoadBalancer
    Description: ARN of the Load Balancer resource
  
  TargetGroupArn:
    Value: !GetAtt TargetGroup.TargetGroupArn
    Description: ARN of the Target Group resource